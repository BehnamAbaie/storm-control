<?xml version="1.0" encoding="ISO-8859-1"?>
<config>

  <!-- The starting directory. -->
  <directory type="directory">C:/Data/</directory>

  <!-- The setup name -->
  <setup_name type="string">scope6</setup_name>

  <!-- The ui type, this is 'classic' or 'detached' -->
  <ui_type type="string">classic</ui_type>

  <!--
      This has two effects:
      
      (1) If this is True any exception will immediately crash HAL, which can
      be useful for debugging. If it is False then some exceptions will be
      handled by the modules.
      
      (2) If it is False we also don't check whether messages are valid.
  -->
  <strict type="boolean">True</strict>
  
  <!--
      Define the modules to use for this setup.
  -->
  <modules>

    <!--
	This is the main window, you must have this.
    -->
    <hal>
      <module_name type="string">storm_control.hal4000.hal4000</module_name>
      <class_name type="string">HalController</class_name>
    </hal>

    <!--
	You also need all of these.
    -->

    <!-- Camera display. -->
    <display>
      <class_name type="string">Display</class_name>
      <module_name type="string">storm_control.hal4000.display.display</module_name>
      <parameters>

	<!-- The default color table. Other options are in hal4000/colorTables/all_tables -->
	<colortable type="string">ramp.ctbl</colortable>
	
      </parameters>
    </display>
    
    <!-- Feeds. -->
    <feeds>
      <class_name type="string">Feeds</class_name>
      <module_name type="string">storm_control.hal4000.feeds.feeds</module_name>
    </feeds>

    <!-- Filming and starting/stopping the camera. -->
    <film>
      <class_name type="string">Film</class_name>
      <module_name type="string">storm_control.hal4000.film.film</module_name>

      <!-- Film parameters specific to this setup go here. -->
      <parameters>
	<extension desc="Movie file name extension" type="string" values=",Red,Green,Blue"></extension>
      </parameters>
    </film>

    <!-- Which objective is being used, etc. -->
    <mosaic>
      <class_name type="string">Mosaic</class_name>
      <module_name type="string">storm_control.hal4000.mosaic.mosaic</module_name>

      <!-- List objectives available on this setup here. -->
      <parameters>
        <flip_horizontal desc="Flip image horizontal (mosaic)" type="boolean">True</flip_horizontal>
        <flip_vertical desc="Flip image vertical (mosaic)" type="boolean">False</flip_vertical>
        <transpose desc="Transpose image (mosaic)" type="boolean">True</transpose>

        <objective desc="Current objective" type="string" values="obj1,obj2">obj1</objective>
        <obj1 desc="Objective 1" type="custom">60x,0.108,0.0,0.0</obj1>  <!-- 0.108 -->
        <obj2 desc="Objective 2" type="custom">10x,1.60,0.0,0.0</obj2>
      </parameters>
    </mosaic>

    <!-- Loading, changing and editting settings/parameters -->
    <settings>
      <class_name type="string">Settings</class_name>
      <module_name type="string">storm_control.hal4000.settings.settings</module_name>
    </settings>

    <!-- Set the time base for films. -->
    <timing>
      <class_name type="string">Timing</class_name>
      <module_name type="string">storm_control.hal4000.timing.timing</module_name>
      <parameters>
	<time_base type="string">camera1</time_base>
      </parameters>
    </timing>
  
    <!--
	Everything else is optional, but you probably want at least one camera.
    -->

    <!-- Camera control. -->
    <!--
	Note that the cameras must have the names "camera1", "camera2", etc..
	
	Cameras are either "master" (they provide their own hardware timing)
	or "slave" they are timed by another camera. Each time the cameras
	are started the slave cameras are started first, then the master cameras.
    -->

    <camera1>
      <class_name type="string">Camera</class_name>
      <module_name type="string">storm_control.hal4000.camera.camera</module_name>
      <camera>
        <master type="boolean">True</master>
        <class_name type="string">PhotometricsCameraControl</class_name>
        <module_name type="string">storm_control.hal4000.camera.photometricsCameraControl</module_name>
        <parameters>         
          <!-- The PVCAM SDK. -->
          <pvcam_sdk type="string">C:/Windows/System32/pvcam64.dll</pvcam_sdk>
          <!-- The camera name. -->
          <camera_name type="string">PMUSBCam00</camera_name>
          <!-- These are the display defaults, not the camera range. -->
          <default_max type="int">9000</default_max> 
          <default_min type="int">100</default_min>
          <flip_horizontal type="boolean">False</flip_horizontal>
          <flip_vertical type="boolean">False</flip_vertical>
          <transpose type="boolean">False</transpose>
          <!-- This is the extension to use (if any) when saving data from this camera. -->
          <extension type="string"></extension>         
          <!-- Whether or not data from this camera is saved during filming. -->
          <saved type="boolean">True</saved>
        </parameters>
      </camera>
    </camera1>

    
 
      <!-- Illumination (lasers, shutters, etc) control GUI. -->
       <!-- Note: The name of the channel is the gui_name.
             XML tags cannot start with numbers. -->
            
   <!--     -->
    <illumination>
      <class_name type="string">Illumination</class_name>
      <module_name type="string">storm_control.hal4000.illumination.illumination</module_name>
       
      <configuration>
       
        <ch1>
          <gui_name type="string">750</gui_name>
          <color type="string">140,0,0</color>
          <amplitude_modulation>
            <hw_fn_name>Lumencor750</hw_fn_name>
          </amplitude_modulation>
        </ch1>
        <ch2>
          <gui_name type="string">635</gui_name>
          <color type="string">255,0,0</color>
          <amplitude_modulation>
            <hw_fn_name>Lumencor647</hw_fn_name>
          </amplitude_modulation> 
        </ch2>
        <ch3>
          <gui_name type="string">545</gui_name>
          <color type="string">55,255,0</color>
          <amplitude_modulation>
            <hw_fn_name>Lumencor561</hw_fn_name>
          </amplitude_modulation>  
        </ch3>
        <ch4>
          <gui_name type="string">473</gui_name>
          <color type="string">0,200,255</color>
          <amplitude_modulation>
            <hw_fn_name>Lumencor488</hw_fn_name>
          </amplitude_modulation>      
        </ch4>
        <ch5>
          <gui_name type="string">408</gui_name>
          <color type="string">225,0,255</color>
          <amplitude_modulation>
            <hw_fn_name>Lumencor405</hw_fn_name>
          </amplitude_modulation>
        </ch5>
      </configuration> 
    </illumination>
   

    <!-- Lumencor laser control. -->
    <Lumencor405>
      <module_name type="string">storm_control.sc_hardware.lumencor.LumencorModule</module_name>
      <class_name type="string">Celesta</class_name>
      <configuration>
    <ip type="string">192.168.201.200</ip>
    <laser_id type="int">0</laser_id>
    <used_during_filming type="boolean">True</used_during_filming>
      </configuration>
    </Lumencor405>
    
    <Lumencor488>
      <module_name type="string">storm_control.sc_hardware.lumencor.LumencorModule</module_name>
      <class_name type="string">Celesta</class_name>
      <configuration>
    <ip type="string">192.168.201.200</ip>
    <laser_id type="int">2</laser_id>
    <used_during_filming type="boolean">True</used_during_filming>
      </configuration>
    </Lumencor488>
    
    <Lumencor561>
      <module_name type="string">storm_control.sc_hardware.lumencor.LumencorModule</module_name>
      <class_name type="string">Celesta</class_name>
      <configuration>
    <ip type="string">192.168.201.200</ip>
    <laser_id type="int">4</laser_id>
    <used_during_filming type="boolean">True</used_during_filming>
      </configuration>
    </Lumencor561>
    
    <Lumencor647>
      <module_name type="string">storm_control.sc_hardware.lumencor.LumencorModule</module_name>
      <class_name type="string">Celesta</class_name>
      <configuration>
    <ip type="string">192.168.201.200</ip>
    <laser_id type="int">5</laser_id>
    <used_during_filming type="boolean">True</used_during_filming>
      </configuration>
    </Lumencor647>
    
    <Lumencor750>
      <module_name type="string">storm_control.sc_hardware.lumencor.LumencorModule</module_name>
      <class_name type="string">Celesta</class_name>
      <configuration>
    <ip type="string">192.168.201.200</ip>
    <laser_id type="int">6</laser_id>
    <used_during_filming type="boolean">True</used_during_filming>
      </configuration>
    </Lumencor750>

    <!-- end of illumination configuration -->

    <none_em_filter_wheel>
      <module_name type="string">storm_control.sc_hardware.none.noneEMFilterWheelModule</module_name>
      <class_name type="string">NoneEMFilterWheelModule</class_name>
    </none_em_filter_wheel>
      
    <none_irlaser>
      <module_name type="string">storm_control.sc_hardware.none.noneIRLaserModule</module_name>
      <class_name type="string">NoneIRLaserModule</class_name>
    </none_irlaser>
    
   <!-- Thorlabs LDC control for IR laser
    <ldc_irlaser>
      <module_name type="string">storm_control.sc_hardware.thorlabs.LDCModule</module_name>
      <class_name type="string">LDCIRLaserModule</class_name>
      <configuration>
		<ct_fn_name type="string">daq.ir_laser.ct_task</ct_fn_name>
      </configuration>
    </ldc_irlaser>
    -->
    
   
    <!-- Ludl stage -->
    <ludl_stage>
      <module_name type="string">storm_control.sc_hardware.ludl.ludlModule</module_name>
      <class_name type="string">LudlStageRS232</class_name>     
      <configuration>	
        <com_port type="string">COM6</com_port>  <!-- LUDL STAGE COM PORT -->
      </configuration>
    </ludl_stage>
    
    <!-- Ludl Z piezo -->
      <!-- LUDL Z piezo 
    <ludl_peizo_zstage>
      <module_name type="string">storm_control.sc_hardware.ludl.ludlVoltageZModule</module_name>
      <class_name type="string">LudlVoltageZ</class_name>
      <configuration>
		<parameters>
		  <center type="float">200.0</center>
		  <has_center_bar type="boolean">True</has_center_bar>
		  <maximum type="float">350.0</maximum>
		  <minimum type="float">0.0</minimum>
		  <warning_high type="float">330.0</warning_high>
		  <warning_low type="float">20.0</warning_low>
		</parameters>
		<ao_fn_name type="string">daq.mcl.ao_task</ao_fn_name>
		<microns_to_volts type="float">0.029</microns_to_volts>
      </configuration>
    </ludl_peizo_zstage>

	-->
 
    <!-- Progression control GUI -->
    <progressions>
      <module_name type="string">storm_control.hal4000.progressions.progressions</module_name>
      <class_name type="string">Progressions</class_name>
      <configuration>
	<illumination_functionality type="string">illumination</illumination_functionality>

	<frames type="int">100</frames>
	<increment type="float">0.01</increment>
	<starting_value type="float">0.1</starting_value>
      </configuration>
    </progressions>

    <!-- sCMOS calibration module -->
    <scmos_cal>
      <module_name type="string">storm_control.hal4000.miscControl.scmosCalibration</module_name>
      <class_name type="string">SCMOSCalibration</class_name>
    </scmos_cal>
        
    <!-- Spot counter and GUI -->
    <spotcounter>
      <module_name type="string">storm_control.hal4000.spotCounter.spotCounter</module_name>
      <class_name type="string">SpotCounter</class_name>	    
      <configuration>
	<max_threads type="int">4</max_threads>
	<max_size type="int">263000</max_size>
      </configuration>
    </spotcounter>

    <!-- XY Stage control GUI -->
    <stage>
      <module_name type="string">storm_control.hal4000.stage.stage</module_name>
      <class_name type="string">Stage</class_name>	    
      <configuration>
        <stage_functionality type="string">ludl_stage</stage_functionality> 
        <large_step_size type="float">1000.0</large_step_size>
      </configuration>
    </stage>


    <!-- Z stage control GUI.  
    <z_stage>
      <class_name type="string">ZStage</class_name>
      <module_name type="string">storm_control.hal4000.miscControl.zStage</module_name>
      <configuration>
	<z_stage_fn type="string">ludl_peizo_zstage</z_stage_fn>
	<large_step type="float">50.0</large_step>
	<retracted_z type="float">-150.0</retracted_z>
	<small_step type="float">1.0</small_step>	
      </configuration>
    </z_stage>
	-->

    <!-- TCP control -->
    <tcp_control>
      <module_name type="string">storm_control.hal4000.tcpControl.tcpControl</module_name>
      <class_name type="string">TCPControl</class_name>	    
      <configuration>
	<parallel_mode type="boolean">True</parallel_mode>
	<tcp_port type="int">9000</tcp_port>
      </configuration>
    </tcp_control>
    
   
     <!-- Crest spinning disk. -->
	 <!--  allowed = ["70-micron pinholes", "40-micron pinholes"]))   -->
	 
    <spinning_disk>
      <module_name type="string">storm_control.sc_hardware.crestOptics.xlight2SpinningDiskModule</module_name>
      <class_name type="string">Xlight2Module</class_name>
      <configuration>
		<baudrate type="int">9600</baudrate>
		<port type="string">COM5</port>
		<spin_disk type="boolean">True</spin_disk>
		<bright_field_bypass type="boolean">True</bright_field_bypass>
		<disk type="string">70-micron pinholes</disk> 
        <filter_wheel type="string">1:em391/477/549/639/741,2:em405/477/546/638/750,3:em449/520,4:em484/561,5:,6:empty,7:blocked,8:blocked</filter_wheel>
	    <dichroic_mirror type = "string">1:di405/477/546/638/750,2:FF440/520-Di01-25x36,3:three,4:four,5:five</dichroic_mirror>
      </configuration>
    </spinning_disk>
  
                                                    
	
  </modules>
  
</config>
